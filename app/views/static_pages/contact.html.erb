<div class="container-fluid">
  <div id="title">
    <h1>Contact us</h1>  
  </div>
  <div id="contactInfo" class="col-lg-12 col-xs-12">
                <h2>SAY HELLO</h2><br>
                <form>
                  <label for="name">Your Name</label>
                  <div class="form-group">
                    <input required="required" class="form-control" placeholder="e.g. John Smithers***" type="text" id="name">
                  </div>
                  <label for="number">Your number</label>
                  <div class="form-group">
                    <input required="required" class="form-control" placeholder="e.g. 0450 xxx xxx" type="number" id="number">
                  </div>
                  <label for="email">Your email</label>
                  <div class="form-group">
                    <input required="required" class="form-control" placeholder="e.g. @johnSmith***" type="email" id="email"> 
                  </div>
                  <label for="formContact">Tell me your thoughts?</label>
                 <textarea class="form-control message-box" rows="5" id="formContact" minlength="10" required="required" placeholder="e.g. I have a website idea!***"></textarea>
                  <p id="visible-comment"></p>
                  <p id="char-count"></p> <button type="submit" class="btn btn-default" id="button">Submit</button>
                </form><br>
              </div>
              </div>
  <div id="aboutText" class="container">
    <div class="row">
      <div class="col-lg-12 col-xs-12">
      <p>Great. We’ve applied our template to our pages, but it still looks pretty plain. What if we wanted to apply CSS styles to our pages?

      In your project directory in Sublime Text, open your assets folder and click on stylesheets. Open the static_pages.scss file. You’ll see some comments already included. Remember when we generated index, about, and contact pages using the controller generator for static_pages? This CSS file, aptly also named static_pages.scss , was also created by the static_pages controller.

      Let’s add some styles to our h1 selector, such as a font family, color, and text alignment. (Keep in mind all changes in this file will be accessible on all pages of your app. The different files are there to help you organize page specific CSS code. But if you apply a CSS rule to h1 in here it will also be applied to all h1 elements on other pages. So be careful and use classes if you want to specify CSS rules for only certain pages)

      </p>
      <br>
      <br>
      <p>Great. We’ve applied our template to our pages, but it still looks pretty plain. What if we wanted to apply CSS styles to our pages?

      In your project directory in Sublime Text, open your assets folder and click on stylesheets. Open the static_pages.scss file. You’ll see some comments already included. Remember when we generated index, about, and contact pages using the controller generator for static_pages? This CSS file, aptly also named static_pages.scss , was also created by the static_pages controller.

      Let’s add some styles to our h1 selector, such as a font family, color, and text alignment. (Keep in mind all changes in this file will be accessible on all pages of your app. The different files are there to help you organize page specific CSS code. But if you apply a CSS rule to h1 in here it will also be applied to all h1 elements on other pages. So be careful and use classes if you want to specify CSS rules for only certain pages)

      </p>
      <br>
      <br>
      <p>Great. We’ve applied our template to our pages, but it still looks pretty plain. What if we wanted to apply CSS styles to our pages?

      In your project directory in Sublime Text, open your assets folder and click on stylesheets. Open the static_pages.scss file. You’ll see some comments already included. Remember when we generated index, about, and contact pages using the controller generator for static_pages? This CSS file, aptly also named static_pages.scss , was also created by the static_pages controller.

      Let’s add some styles to our h1 selector, such as a font family, color, and text alignment. (Keep in mind all changes in this file will be accessible on all pages of your app. The different files are there to help you organize page specific CSS code. But if you apply a CSS rule to h1 in here it will also be applied to all h1 elements on other pages. So be careful and use classes if you want to specify CSS rules for only certain pages)

      </p>
      </div>
    </div>
  </div>  
</div>


